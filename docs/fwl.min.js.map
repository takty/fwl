{"version":3,"sources":["fwl.js"],"names":["Control","degree","minSize","width","height","maxSize","Number","MAX_SAFE_INTEGER","_owner","constructor","owner","this","getDegree","addPossibleDegreesTo","dest","add","setMinimumSize","s","getMinimumSize","setMaximumSize","getMaximumSize","Button","text","deg","super","length","name","Checkbox","Checkboxes","items","maxLen","it","Math","max","Label","ListBox","static","minDeg","maxDeg","MIN_ITEM_SIZE","ret","rDeg","i","r","count","push","minH","min","RadioButtons","Layout","direction","NO_DIR","getOwner","getDirection","getEstimatedMinimumSize","children","ss","map","e","_calcSize","getEstimatedMinimumSizeIf","child","HorizontalArray","HORIZONTAL","doLayout","size","x","fe","setSize","setLocation","FLayout","getSize","VerticalArray","VERTICAL","y","LeftLabeling","le","ce","ld","cd","TopLabeling","indent","FElement","parent","type","location","_estMinSize","_states","_cans","_baseCans","setParent","getParent","getVariable","_getCandidateEntries","_assignCandidates","worstDeg","d","initializeProblem","p","createVariable","createConstraint","relation","FuzzyRelationFunction","vals","typeRelation","variables","val","FuzzyRelation","MIN_SATISFACTION_DEGREE","_typeToCandidate","value","comb","isValid","isEmpty","getLocation","FControl","can","initializeEstimatedMinimumSize","initializeDomain","checkGivenMaximumSize","setDomain","createDomain","setWorstDegree","Caption","longText","shortText","Multiple","createVariableInstances","Single","SingleBoolean","itemTrue","itemFalse","getDescendantSize","c","correspondingRelation","differentDirectionRelation","childIndex","val1","val2","MAX_SATISFACTION_DEGREE","childLayout","pd","SAME_DIRECTION","Array","fill","lens","assign","increment","clear","childMinSize","lt","Group","args","Labeling","e_label","e_content","FlexibleLayout","root","lastDegree","setRootContainer","cw","that","h","w","getRootContainer","getLastSatisfactionDegree","layoutContainer","ts","performLayout","targetSize","Problem","sortVariablesInBreadthFirstOrder","Set","solveProblem","possibleDegrees","time","DEBUG","console","log","Date","now","success","pds","values","sort","a","b","solver","FuzzyForwardChecking","setTargetRate","solve","worstSatisfactionDegree","worstDesirability","Problems","averagePathLengths","vs","ls","nls","l","sortVariablesInCertainOrder","sortVariables","o1","o2","indexOf","l1","l2","SORT_BY_DESCENDANT","ds1","SORT_BY_PATH_LENGTH","len1","index"],"mappings":"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","file":"fwl.min.js","sourcesContent":["\nclass Control {\n\n\t#degree;\n\t#minSize = { width: 0, height: 0 };\n\t#maxSize = { width: Number.MAX_SAFE_INTEGER, height: Number.MAX_SAFE_INTEGER };\n\t_owner;\n\n\tconstructor(owner, degree) {\n\t\tthis._owner = owner;\n\t\tthis.#degree = degree;\n\t}\n\n\tgetDegree() {\n\t\treturn this.#degree;\n\t}\n\n\taddPossibleDegreesTo(dest) {\n\t\tdest.add(this.#degree);\n\t}\n\n\tsetMinimumSize(s) {\n\t\tthis.#minSize = { ...s };\n\t}\n\n\tgetMinimumSize() {\n\t\treturn { ...this.#minSize };\n\t}\n\n\tsetMaximumSize(s) {\n\t\tthis.#maxSize = { ...s };\n\t}\n\n\tgetMaximumSize() {\n\t\treturn { ...this.#maxSize };\n\t}\n\n}\n\n\nclass Button extends Control {\n\n\t#text;\n\n\tconstructor(owner, deg, text) {\n\t\tsuper(owner, deg);\n\t\tthis.#text = text;\n\n\t\tconst s = { width: this.#text.length + 2, height: 2 };\n\t\tthis.setMinimumSize(s);\n\t\tthis.setMaximumSize(s);\n\t}\n\n\tname() {\n\t\treturn 'button';\n\t}\n\n}\n\n\nclass Checkbox extends Control {\n\n\t#text;\n\n\tconstructor(owner, deg, text) {\n\t\tsuper(owner, deg);\n\t\tthis.#text = text;\n\n\t\tconst s = { width: this.#text.length + 2, height: 1 };\n\t\tthis.setMinimumSize(s);\n\t\tthis.setMaximumSize(s);\n\t}\n\n\tname() {\n\t\treturn 'checkbox';\n\t}\n\n}\n\n\nclass Checkboxes extends Control {\n\n\t#items;\n\n\tconstructor(owner, deg, items) {\n\t\tsuper(owner, deg);\n\t\tthis.#items = [...items];\n\n\t\tlet maxLen = 0;\n\t\tfor (const it of items) {\n\t\t\tmaxLen = Math.max(maxLen, it.length);\n\t\t}\n\n\t\tconst s = { width: maxLen + 1, height: items.length * 1 };\n\t\tthis.setMinimumSize(s);\n\t\tthis.setMaximumSize(s);\n\t}\n\n\tname() {\n\t\treturn 'checkboxes';\n\t}\n\n}\n\n\nclass Label extends Control {\n\n\t#text;\n\n\tconstructor(owner, deg, text) {\n\t\tsuper(owner, deg);\n\t\tthis.#text = text;\n\n\t\tconst s = { width: this.#text.length, height: 1 };\n\t\tthis.setMinimumSize(s);\n\t\tthis.setMaximumSize(s);\n\t}\n\n\tname() {\n\t\treturn 'label';\n\t}\n\n}\n\n\nclass ListBox extends Control {\n\n\tstatic MIN_ITEM_SIZE = 4;\n\n\t#items;\n\n\tstatic createVariableInstances(minDeg, maxDeg, items) {\n\t\tif (items.length <= ListBox.MIN_ITEM_SIZE) {\n\t\t\treturn [[maxDeg, owner => new ListBox(owner, maxDeg, items, ListBox.MIN_ITEM_SIZE)]];\n\t\t}\n\t\tconst ret = [];\n\t\tconst rDeg = maxDeg - minDeg;\n\t\tfor (let i = ListBox.MIN_ITEM_SIZE + 1; i < items.length; ++i) {\n\t\t\tconst r = maxDeg + rDeg * (i / items.length - 1);\n\t\t\tconst count = i;\n\t\t\tret.push([r, owner => new ListBox(owner, r, items, count)]);\n\t\t}\n\t\treturn ret;\n\t}\n\n\tconstructor(owner, deg, items, count = items.length) {\n\t\tsuper(owner, deg);\n\t\tthis.#items = [...items];\n\n\t\tconst minH = Math.min(count, ListBox.MIN_ITEM_SIZE) * 1;\n\n\t\tlet maxLen = 0;\n\t\tfor (const it of items) {\n\t\t\tmaxLen = Math.max(maxLen, it.length);\n\t\t}\n\n\t\tthis.setMinimumSize({ width: maxLen + 1, height: minH });\n\t\tthis.setMaximumSize({ width: Number.MAX_SAFE_INTEGER, height: Number.MAX_SAFE_INTEGER });\n\t}\n\n\tname() {\n\t\treturn 'list box';\n\t}\n\n}\n\n\nclass RadioButtons extends Control {\n\n\t#items;\n\n\tconstructor(owner, deg, items) {\n\t\tsuper(owner, deg);\n\t\tthis.#items = [...items];\n\n\t\tlet maxLen = 0;\n\t\tfor (const it of items) {\n\t\t\tmaxLen = Math.max(maxLen, it.length);\n\t\t}\n\n\t\tconst s = { width: maxLen + 1, height: items.length * 1 };\n\t\tthis.setMinimumSize(s);\n\t\tthis.setMaximumSize(s);\n\t}\n\n\tname() {\n\t\treturn 'radio buttons';\n\t}\n\n}\n\n\n\nclass Layout {\n\n\tstatic NO_DIR     = -1;\n\tstatic VERTICAL   = 0;\n\tstatic HORIZONTAL = 1;\n\n\t#owner;\n\t#degree;\n\t#direction;\n\n\tconstructor(owner, degree, direction = Layout.NO_DIR) {\n\t\tthis.#owner     = owner;\n\t\tthis.#degree    = degree;\n\t\tthis.#direction = direction;\n\t}\n\n\tgetOwner() {\n\t\treturn this.#owner;\n\t}\n\n\tgetDegree() {\n\t\treturn this.#degree;\n\t}\n\n\tgetDirection() {\n\t\treturn this.#direction;\n\t}\n\n\tgetEstimatedMinimumSize(children) {\n\t\tconst ss = children.map(e => e.getEstimatedMinimumSize());\n\t\treturn this._calcSize(ss);\n\t}\n\n\tgetEstimatedMinimumSizeIf(children, child, minSize) {\n\t\tconst ss = children.map(e => ((child === e) ? minSize : e.getEstimatedMinimumSize()));\n\t\treturn this._calcSize(ss);\n\t}\n\n\tgetMinimumSize(children) {\n\t\tconst ss = children.map(e => e.getMinimumSize(e));\n\t\treturn this._calcSize(ss);\n\t}\n\n\tgetMaximumSize() {\n\t\treturn { width: Number.MAX_SAFE_INTEGER, height: Number.MAX_SAFE_INTEGER };\n\t}\n\n}\n\n\nclass HorizontalArray extends Layout {\n\n\tconstructor(owner, deg) {\n\t\tsuper(owner, deg, Layout.HORIZONTAL);\n\t}\n\n\tname() {\n\t\treturn 'horizontal array';\n\t}\n\n\t_calcSize(ss) {\n\t\tlet width  = 0;\n\t\tlet height = 0;\n\n\t\tfor (const s of ss) {\n\t\t\twidth += s.width;\n\t\t\tif (height < s.height) {\n\t\t\t\theight = s.height;\n\t\t\t}\n\t\t}\n\t\twidth  += (ss.length - 1) * 1 + 2;\n\t\theight += 2;\n\t\treturn { width, height };\n\t}\n\n\tdoLayout(children, size) {\n\t\tlet x = 1;\n\n\t\tfor (const fe of children) {\n\t\t\tconst min = fe.getMinimumSize();\n\t\t\tconst max = fe.getMaximumSize();\n\t\t\tfe.setSize(min.width, Math.min(size.height - 2, max.height));\n\t\t\tfe.setLocation(x, 1);\n\n\t\t\tif (fe instanceof FLayout) {\n\t\t\t\tfe.doLayout();\n\t\t\t}\n\t\t\tx += fe.getSize().width + 1;\n\t\t}\n\t}\n\n}\n\n\nclass VerticalArray extends Layout {\n\n\tconstructor(owner, deg) {\n\t\tsuper(owner, deg, Layout.VERTICAL);\n\t}\n\n\tname() {\n\t\treturn 'vertical array';\n\t}\n\n\t_calcSize(ss) {\n\t\tlet width  = 0;\n\t\tlet height = 0;\n\n\t\tfor (const s of ss) {\n\t\t\tif (width < s.width) {\n\t\t\t\twidth = s.width;\n\t\t\t}\n\t\t\theight += s.height;\n\t\t}\n\t\twidth  += 2;\n\t\theight += (ss.length - 1) * 1 + 2;\n\t\treturn { width, height };\n\t}\n\n\tdoLayout(children, size) {\n\t\tlet y = 1;\n\n\t\tfor (const fe of children) {\n\t\t\tconst min = fe.getMinimumSize();\n\t\t\tconst max = fe.getMaximumSize();\n\t\t\tfe.setSize(Math.min(size.width - 2, max.width), min.height);\n\t\t\tfe.setLocation(1, y);\n\n\t\t\tif (fe instanceof FLayout) {\n\t\t\t\tfe.doLayout();\n\t\t\t}\n\t\t\ty += fe.getSize().height + 1;\n\t\t}\n\t}\n\n}\n\n\nclass LeftLabeling extends Layout {\n\n\tconstructor(owner, deg) {\n\t\tsuper(owner, deg, Layout.HORIZONTAL);\n\t}\n\n\tname() {\n\t\treturn 'left labeling';\n\t}\n\n\t_calcSize(ss) {\n\t\tconst width  = ss[0].width + 1 + ss[1].width + 2;\n\t\tconst height = Math.max(ss[0].height, ss[1].height) + 2;\n\t\treturn { width, height };\n\t}\n\n\tdoLayout(children, size) {\n\t\tconst le = children[0];\n\t\tconst ce = children[1];\n\t\tconst ld = le.getMinimumSize();\n\t\tconst cd = ce.getMaximumSize();\n\n\t\tle.setSize(ld.width, ld.height);\n\t\tle.setLocation(1, 1);\n\n\t\tce.setSize(Math.min(size.width - 2 - (ld.width + 1), cd.width), Math.min(size.height - 2, cd.height));\n\t\tce.setLocation(1 + le.getSize().width + 1, 1);\n\n\t\tif (ce instanceof FLayout) {\n\t\t\tce.doLayout();\n\t\t}\n\t}\n\n}\n\n\nclass TopLabeling extends Layout {\n\n\t#indent = 1;\n\n\tconstructor(owner, deg) {\n\t\tsuper(owner, deg, Layout.VERTICAL);\n\t}\n\n\tname() {\n\t\treturn 'top labeling';\n\t}\n\n\t_calcSize(ss) {\n\t\tconst width  = Math.max(ss[0].width, ss[1].width + this.#indent) + 2;\n\t\tconst height = ss[0].height + 1 + ss[1].height + 2;\n\t\treturn { width, height };\n\t}\n\n\tdoLayout(children, size) {\n\t\tconst le = children[0];\n\t\tconst ce = children[1];\n\t\tconst ld = le.getMinimumSize();\n\t\tconst cd = ce.getMaximumSize();\n\n\t\tle.setSize(ld.width, ld.height);\n\t\tle.setLocation(1, 1);\n\n\t\tce.setSize(Math.min(size.width - 2 - this.#indent, cd.width), Math.min(size.height - 2 - (ld.height + 1), cd.height));\n\t\tce.setLocation(1 + this.#indent, 1 + le.getSize().height + 1);\n\n\t\tif (ce instanceof FLayout) {\n\t\t\tce.doLayout();\n\t\t}\n\t}\n\n}\n\n\n\nclass FElement {\n\n\t#parent   = null;\n\t#type     = null;\n\t#size     = { width: 0, height: 0 };\n\t#location = { x: 0, y: 0 };\n\n\t_estMinSize = { width: Number.MAX_SAFE_INTEGER, height: Number.MAX_SAFE_INTEGER };\n\t_states     = [];\n\t_cans       = [];\n\t_baseCans   = [];\n\n\tname() {\n\t\treturn '';\n\t}\n\n\tsetParent(parent) {\n\t\tthis.#parent = parent;\n\t}\n\n\tgetParent() {\n\t\treturn this.#parent;\n\t}\n\n\tgetVariable() {\n\t\treturn this.#type;\n\t}\n\n\n\t// -------------------------------------------------------------------------\n\n\n\tgetEstimatedMinimumSize() {\n\t\treturn { ...this._estMinSize };\n\t}\n\n\t_getCandidateEntries() {\n\t\treturn [];\n\t}\n\n\t_assignCandidates(worstDeg, dest) {\n\t\tdest.length = 0;\n\t\tfor (const [d, e] of this._getCandidateEntries()) {\n\t\t\tif (worstDeg <= d) {\n\t\t\t\tdest.push(e(this));\n\t\t\t}\n\t\t}\n\t}\n\n\tinitializeProblem(p) {\n\t\tthis._assignCandidates(0, this._cans);\n\t\tthis._baseCans = [ ...this._cans ];\n\n\t\tthis.#type = p.createVariable({ name: this.name() + ': type' } );\n\n\t\tp.createConstraint({\n\t\t\tname     : this.name() + ': type',\n\t\t\trelation : new FuzzyRelationFunction((...vals) => this.#typeRelation(...vals)),\n\t\t\tvariables: [this.#type],\n\t\t});\n\t}\n\n\t#typeRelation(val) {\n\t\tif (this._states.length === 0) {\n\t\t\treturn FuzzyRelation.MIN_SATISFACTION_DEGREE;\n\t\t}\n\t\tconst pc = this._typeToCandidate(val);\n\t\treturn pc.getDegree();\n\t}\n\n\t_typeToCandidate(val = null) {\n\t\tif (val === null && this.#type) {\n\t\t\tval = this.#type.value();\n\t\t}\n\t\tif (this._states[val]) {\n\t\t\treturn this._cans[this._states[val].comb[0]];\n\t\t}\n\t\treturn null;\n\t}\n\n\tisValid() {\n\t\tif (!this.#type || this.#type.isEmpty()) return false;\n\t\tif (!this._states[this.#type.value()]) return false;\n\t\treturn true;\n\t}\n\n\n\t// -------------------------------------------------------------------------\n\n\n\tgetMinimumSize() {\n\t\treturn { ...this._states[this.#type.value()].size };\n\t}\n\n\tgetMaximumSize() {\n\t\treturn this._typeToCandidate().getMaximumSize();\n\t}\n\n\t/**\n\t * Gets the size of an element.\n\t * @return Size.\n\t */\n\tgetSize() {\n\t\treturn { ...this.#size };\n\t}\n\n\t/**\n\t * Sets the size of the element.\n\t * @param width Width.\n\t * @param height Height.\n\t */\n\tsetSize(width, height) {\n\t\tthis.#size = { width, height };\n\t}\n\n\t/**\n\t * Gets the element location.\n\t * @return Location.\n\t */\n\tgetLocation() {\n\t\treturn { ...this.#location };\n\t}\n\n\t/**\n\t * Sets the location of the element.\n\t * @param x X.\n\t * @param y Y.\n\t */\n\tsetLocation(x, y) {\n\t\tthis.#location = { x, y };\n\t}\n\n}\n\n\nclass FControl extends FElement {\n\n\tname() {\n\t\tconst can = this._typeToCandidate();\n\t\treturn can?.name() ?? 'control';\n\t}\n\n\tinitializeEstimatedMinimumSize() {\n\t\tlet width  = Number.MAX_SAFE_INTEGER;\n\t\tlet height = Number.MAX_SAFE_INTEGER;\n\n\t\tfor (const can of this._cans) {\n\t\t\tconst d = can.getMinimumSize();\n\t\t\twidth  = Math.min(width, d.width);\n\t\t\theight = Math.min(height, d.height);\n\t\t}\n\t\tthis._estMinSize = { width, height };\n\t}\n\n\tinitializeDomain(p) {\n\t\tthis._states.length = 0;\n\n\t\tfor (let i = 0; i < this._cans.length; i += 1) {\n\t\t\tconst size = this._cans[i].getMinimumSize();\n\n\t\t\tif (this.getParent().checkGivenMaximumSize(this, size)) {\n\t\t\t\tthis._states.push({ comb: [i], size });\n\t\t\t}\n\t\t}\n\t\tif (this._states.length === 0) {\n\t\t\treturn false;\n\t\t}\n\t\tthis.getVariable().setDomain(p.createDomain({ min: 0, max: this._states.length - 1 }));\n\t\treturn true;\n\t}\n\n\tsetWorstDegree(deg) {\n\t\tthis._assignCandidates(deg, this._cans);\n\t\tif (this._cans.length === 0) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\taddPossibleDegreesTo(dest) {\n\t\tfor (const can of this._baseCans) {\n\t\t\tcan.addPossibleDegreesTo(dest);\n\t\t}\n\t}\n\n}\n\n\nclass Caption extends FControl {\n\n\t#longText;\n\t#shortText;\n\n\tconstructor(longText, shortText) {\n\t\tsuper();\n\t\tthis.#longText  = longText;\n\t\tthis.#shortText = shortText;\n\t}\n\n\tname() {\n\t\treturn 'caption (' + super.name() + ')';\n\t}\n\n\t_getCandidateEntries() {\n\t\treturn [\n\t\t\t[1.0, owner => new Label(owner, 1.0, this.#longText)],\n\t\t\t[0.8, owner => new Label(owner, 0.8, this.#shortText)],\n\t\t];\n\t}\n\n}\n\n\nclass Multiple extends FControl {\n\n\t#items;\n\n\tconstructor(...items) {\n\t\tsuper();\n\t\tthis.#items = items;\n\t}\n\n\tname() {\n\t\treturn 'multiple (' + super.name() + ')';\n\t}\n\n\t_getCandidateEntries() {\n\t\tconst r = ListBox.createVariableInstances(0.75, 0.9, this.#items);\n\t\tr.push([1.0, owner => new Checkboxes(owner, 1.0, this.#items)]);\n\t\treturn r;\n\t}\n\n}\n\n\nclass Single extends FControl {\n\n\t#items;\n\n\tconstructor(...items) {\n\t\tsuper();\n\t\tthis.#items = items;\n\t}\n\n\tname() {\n\t\treturn 'single (' + super.name() + ')';\n\t}\n\n\t_getCandidateEntries() {\n\t\tconst r = ListBox.createVariableInstances(0.75, 0.9, this.#items);\n\t\tr.push([1.0, owner => new RadioButtons(owner, 1.0, this.#items)]);\n\t\treturn r;\n\t}\n\n}\n\n\nclass SingleBoolean extends FControl {\n\n\t#itemTrue;\n\t#itemFalse;\n\n\tconstructor(itemTrue, itemFalse) {\n\t\tsuper();\n\t\tthis.#itemTrue  = itemTrue;\n\t\tthis.#itemFalse = itemFalse;\n\t}\n\n\tname() {\n\t\treturn 'single boolean (' + super.name() + ')';\n\t}\n\n\t_getCandidateEntries() {\n\t\treturn [\n\t\t\t[0.9, owner => new Checkbox(owner, 0.9, this.#itemTrue)],\n\t\t\t[1.0, owner => new RadioButtons(owner, 1.0, [this.#itemTrue, this.#itemFalse])],\n\t\t];\n\t}\n\n}\n\n\nclass FLayout extends FElement {\n\n\tstatic SAME_DIRECTION = 0.50;\n\n\t#children = [];\n\n\tname() {\n\t\tconst can = this._typeToCandidate();\n\t\treturn can?.name() ?? 'layout';\n\t}\n\n\tadd(child) {\n\t\tchild.setParent(this);\n\t\tthis.#children.push(child);\n\t}\n\n\tchildren() {\n\t\treturn this.#children;\n\t}\n\n\tgetDescendantSize() {\n\t\tlet size = this.#children.length;\n\n\t\tfor (const c of this.#children) {\n\t\t\tif (c instanceof FLayout) {\n\t\t\t\tsize += c.getDescendantSize();\n\t\t\t}\n\t\t}\n\t\treturn size;\n\t}\n\n\n\t// -------------------------------------------------------------------------\n\n\n\tinitializeProblem(p) {\n\t\tsuper.initializeProblem(p);\n\n\t\tfor (let i = 0; i < this.#children.length; ++i) {\n\t\t\tconst c = this.#children[i];\n\t\t\tc.initializeProblem(p);\n\n\t\t\tp.createConstraint({\n\t\t\t\tname     : this.name() + ': toChild',\n\t\t\t\trelation : new FuzzyRelationFunction((...vals) => this.#correspondingRelation(i, ...vals)),\n\t\t\t\tvariables: [this.getVariable(), c.getVariable()],\n\t\t\t});\n\t\t\tif (c instanceof FLayout) {\n\t\t\t\tp.createConstraint({\n\t\t\t\t\tname     : this.name() + ': toChild',\n\t\t\t\t\trelation : new FuzzyRelationFunction((...vals) => this.#differentDirectionRelation(c, ...vals)),\n\t\t\t\t\tvariables: [this.getVariable(), c.getVariable()],\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\t#correspondingRelation(childIndex, val1, val2) {\n\t\tconst s = this._states[val1];\n\t\tif (s.comb[childIndex + 1] === val2) {\n\t\t\treturn FuzzyRelation.MAX_SATISFACTION_DEGREE;\n\t\t}\n\t\treturn FuzzyRelation.MIN_SATISFACTION_DEGREE;\n\t}\n\n\t#differentDirectionRelation(childLayout, val1, val2) {\n\t\tconst pd = this._typeToCandidate(val1).getDirection();\n\t\tconst cd = childLayout._typeToCandidate(val2).getDirection();\n\t\tif (pd !== Layout.NO_DIR && cd !== Layout.NO_DIR && pd === cd) {\n\t\t\treturn FLayout.SAME_DIRECTION;\n\t\t}\n\t\treturn FuzzyRelation.MAX_SATISFACTION_DEGREE;\n\t}\n\n\n\t// -------------------------------------------------------------------------\n\n\n\tinitializeEstimatedMinimumSize() {\n\t\tfor (const c of this.#children) {\n\t\t\tc.initializeEstimatedMinimumSize();\n\t\t}\n\t\tlet width  = Number.MAX_SAFE_INTEGER;\n\t\tlet height = Number.MAX_SAFE_INTEGER;\n\n\t\tfor (const can of this._cans) {\n\t\t\tconst d = can.getEstimatedMinimumSize(this.#children);\n\t\t\twidth  = Math.min(width, d.width);\n\t\t\theight = Math.min(height, d.height);\n\t\t}\n\t\tthis._estMinSize = { width, height };\n\t}\n\n\tinitializeDomain(p) {\n\t\tfor (const c of this.#children) {\n\t\t\tif (!c.initializeDomain(p)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\tconst comb = new Array(this.#children.length + 1).fill(0);\n\t\tconst lens = new Array(this.#children.length + 1).fill(0);\n\n\t\tlens[0] = this._cans.length;\n\t\tfor (let i = 0; i < this.#children.length; ++i) {\n\t\t\tlens[i + 1] = this.#children[i]._states.length;\n\t\t}\n\n\t\tlet width  = Number.MAX_SAFE_INTEGER;\n\t\tlet height = Number.MAX_SAFE_INTEGER;\n\n\t\tthis._states.length = 0;\n\n\t\tdo {  // Try assigning a value and check the size.\n\t\t\tfor (let i = 0; i < this.#children.length; ++i) {\n\t\t\t\tconst c = this.#children[i];\n\t\t\t\tc.getVariable().assign(comb[i + 1]);\n\t\t\t}\n\t\t\tconst size = this._cans[comb[0]].getMinimumSize(this.#children);\n\n\t\t\tif (this.getParent().checkGivenMaximumSize(this, size)) {\n\t\t\t\tthis._states.push({ comb: [...comb], size });\n\t\t\t\twidth  = Math.min(width, size.width);\n\t\t\t\theight = Math.min(height, size.height);\n\t\t\t}\n\t\t} while (this.#increment(comb, lens));\n\n\t\tfor (const c of this.#children) {\n\t\t\tc.getVariable().clear();\n\t\t}\n\t\tthis._estMinSize = { width, height };\n\n\t\tif (this._states.length === 0) {\n\t\t\treturn false;\n\t\t}\n\t\tthis.getVariable().setDomain(p.createDomain({ min: 0, max: this._states.length - 1 }));\n\t\treturn true;\n\t}\n\n\t#increment(comb, lens) {\n\t\tfor (let i = 0; i < comb.length; ++i) {\n\t\t\tcomb[i]++;\n\t\t\tif (comb[i] < lens[i]) break;\n\t\t\tif (i === comb.length - 1) return false;\n\t\t\tcomb[i] = 0;\n\t\t}\n\t\treturn true;\n\t}\n\n\tcheckGivenMaximumSize(child, childMinSize) {\n\t\tfor (const lt of this._cans) {\n\t\t\tconst min = lt.getEstimatedMinimumSizeIf(this.#children, child, childMinSize);\n\t\t\tif (this.getParent().checkGivenMaximumSize(this, min)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tsetWorstDegree(deg) {\n\t\tthis._assignCandidates(deg, this._cans);\n\t\tif (this._cans.length === 0) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (const c of this.#children) {\n\t\t\tif (!c.setWorstDegree(deg)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\taddPossibleDegreesTo(dest) {\n\t\tfor (const can of this._baseCans) {\n\t\t\tdest.add(can.getDegree());\n\t\t}\n\t\tfor (const c of this.#children) {\n\t\t\tc.addPossibleDegreesTo(dest);\n\t\t}\n\t\tdest.add(FLayout.SAME_DIRECTION);\n\t}\n\n\n\t// -------------------------------------------------------------------------\n\n\n\tdoLayout() {\n\t\tconst can = this._typeToCandidate();\n\t\tcan.doLayout(this.#children, this.getSize());\n\t}\n\n}\n\n\nclass Group extends FLayout {\n\n\tconstructor(args) {\n\t\tsuper();\n\t\tif (args.children) {\n\t\t\tfor (const c of args.children) {\n\t\t\t\tthis.add(c);\n\t\t\t}\n\t\t}\n\t}\n\n\t_getCandidateEntries() {\n\t\treturn [\n\t\t\t[0.98, owner => new HorizontalArray(owner, 0.98)],\n\t\t\t[1.0,  owner => new VerticalArray(owner, 1.0)],\n\t\t];\n\t}\n\n}\n\n\nclass Labeling extends FLayout {\n\n\tconstructor(e_label, e_content) {\n\t\tsuper();\n\t\tthis.add(e_label);\n\t\tthis.add(e_content);\n\t}\n\n\t_getCandidateEntries() {\n\t\treturn [\n\t\t\t[1.0, owner => new LeftLabeling(owner, 1)],\n\t\t\t[0.9, owner => new TopLabeling(owner, 0.9)],\n\t\t];\n\t}\n\n}\n\n\nclass FlexibleLayout {\n\n\tstatic DEBUG = true;\n\n\tstatic SORT_BY_DESCENDANT  = true;\n\tstatic SORT_BY_PATH_LENGTH = true;\n\n\t#root;\n\t#size = { width: 0, height: 0 };\n\t#lastDegree;\n\n\tsetRootContainer(cw) {\n\t\tthis.#root = cw;\n\t\tconst that = this;\n\t\tthis.#root.setParent(new class {\n\t\t\tcheckGivenMaximumSize(fe, size) {\n\t\t\t\tconst h = that.#size.height;\n\t\t\t\tconst w = that.#size.width;\n\t\t\t\treturn (size.height <= h && size.width <= w);\n\t\t\t}\n\t\t}());\n\t}\n\n\tgetRootContainer() {\n\t\treturn this.#root;\n\t}\n\n\tgetLastSatisfactionDegree() {\n\t\treturn this.#lastDegree;\n\t}\n\n\tlayoutContainer(ts) {\n\t\tif (this.#performLayout(ts)) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t#performLayout(targetSize) {\n\t\tthis.#size = { ...targetSize };\n\t\tconst p = new Problem();\n\t\tthis.#root.initializeProblem(p);\n\t\tthis.#sortVariablesInBreadthFirstOrder(p);\n\n\t\tconst pd = new Set();\n\t\tthis.#root.addPossibleDegreesTo(pd);\n\t\tif (!this.#solveProblem(p, pd)) return false;\n\n\t\tthis.#root.setSize(this.#size.width, this.#size.height);\n\t\tthis.#root.setLocation(0, 0);\n\t\tthis.#root.doLayout();\n\t\treturn true;\n\t}\n\n\t#solveProblem(p, possibleDegrees) {\n\t\tlet time = 0;\n\t\tif (FlexibleLayout.DEBUG) {\n\t\t\tconsole.log('\\nsolveProblem - started');\n\t\t\ttime = Date.now();\n\t\t}\n\t\tlet success = false;\n\t\tconst pds = [...possibleDegrees.values()].sort((a, b) => b - a);\n\n\t\tfor (const r of pds) {\n\t\t\tif (r <= 0) continue;\n\t\t\tif (FlexibleLayout.DEBUG) console.log(`\\tIteration in wsd ${r}`);\n\t\t\tif (!this.#setWorstDegree(p, r)) continue;\n\n\t\t\tconst solver = new FuzzyForwardChecking(p);\n\t\t\tsolver.setTargetRate(r);\n\n\t\t\tif (solver.solve()) {\n\t\t\t\tsuccess = true;\n\t\t\t\tthis.#lastDegree = r;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (FlexibleLayout.DEBUG) {\n\t\t\tconsole.log(`solveProblem - finished (${success}, wsd = ${p.worstSatisfactionDegree()})\\n`);\n\t\t\tconsole.log(`time: ${Date.now() - time}`);\n\t\t}\n\t\treturn success;\n\t}\n\n\t#setWorstDegree(p, worstDesirability) {\n\t\tconst res = this.#root.setWorstDegree(worstDesirability);\n\t\tif (!res) {\n\t\t\tconsole.log('Failure: initializeDomain');\n\t\t\treturn false;\n\t\t}\n\n\t\tthis.#root.initializeEstimatedMinimumSize();\n\t\tif (!this.#root.initializeDomain(p)) {\n\t\t\tconsole.log('Failure: initializeDomain');\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t#sortVariablesInBreadthFirstOrder(p) {\n\t\tconst lens = Problems.averagePathLengths(p);\n\t\tconst vs   = [this.#root.getVariable()];\n\t\tlet ls = [this.#root];\n\n\t\twhile (ls.length > 0) {\n\t\t\tconst nls = [];\n\n\t\t\tfor (const l of ls) {\n\t\t\t\tfor (const c of l.children()) {\n\t\t\t\t\tif (c instanceof FLayout) {\n\t\t\t\t\t\tnls.push(c);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.#sortVariablesInCertainOrder(nls, lens);\n\t\t\tfor (const l of nls) {\n\t\t\t\tvs.push(l.getVariable());\n\t\t\t}\n\t\t\tls = nls;\n\t\t}\n\t\tp.sortVariables((o1, o2) => {\n\t\t\treturn vs.indexOf(o1) - vs.indexOf(o2);\n\t\t});\n\t}\n\n\t#sortVariablesInCertainOrder(ls, lens) {\n\t\tls.sort((l1, l2) => {\n\t\t\tif (FlexibleLayout.SORT_BY_DESCENDANT) {\n\t\t\t\tconst ds1 = l1.getDescendantSize();\n\t\t\t\tconst ds2 = l2.getDescendantSize();\n\t\t\t\tconst r = ds2 - ds1;\n\t\t\t\tif (r !== 0) return r;\n\t\t\t}\n\t\t\tif (FlexibleLayout.SORT_BY_PATH_LENGTH) {\n\t\t\t\tconst len1 = lens[l1.getVariable().index()];\n\t\t\t\tconst len2 = lens[l2.getVariable().index()];\n\t\t\t\treturn len2 - len1;\n\t\t\t}\n\t\t\treturn 0;\n\t\t});\n\t}\n\n}\n\n\n"]}